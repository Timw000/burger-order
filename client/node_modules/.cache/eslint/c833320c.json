[{"/Users/tim/Projects/TransForm/client/src/main.ts":"1","/Users/tim/Projects/TransForm/client/src/App.vue":"2","/Users/tim/Projects/TransForm/client/src/router/index.ts":"3","/Users/tim/Projects/TransForm/client/src/views/HomeView.vue":"4","/Users/tim/Projects/TransForm/client/src/components/AddForm.vue":"5","/Users/tim/Projects/TransForm/client/src/components/Form.vue":"6","/Users/tim/Projects/TransForm/client/src/components/FormField.vue":"7","/Users/tim/Projects/TransForm/client/src/components/PopupBackdrop.vue":"8","/Users/tim/Projects/TransForm/client/src/components/PrimaryButton.vue":"9","/Users/tim/Projects/TransForm/client/src/store/formStore.ts":"10","/Users/tim/Projects/TransForm/client/src/components/PrimaryInput.vue":"11","/Users/tim/Projects/TransForm/client/src/components/LoadingSpinner.vue":"12","/Users/tim/Projects/TransForm/client/src/components/AddFormGroup.vue":"13","/Users/tim/Projects/TransForm/client/src/components/AddFormInput.vue":"14","/Users/tim/Projects/TransForm/client/src/store/modalStore.ts":"15","/Users/tim/Projects/TransForm/client/src/components/SelectInput.vue":"16","/Users/tim/Projects/TransForm/client/src/models/form.ts":"17","/Users/tim/Projects/TransForm/client/src/utils/generalUtils.ts":"18","/Users/tim/Projects/TransForm/client/src/components/AddFormField.vue":"19","/Users/tim/Projects/TransForm/client/src/components/TabView.vue":"20","/Users/tim/Projects/TransForm/client/src/views/FormView.vue":"21"},{"size":1194,"mtime":1710684354753,"results":"22","hashOfConfig":"23"},{"size":123,"mtime":1710621995710,"results":"24","hashOfConfig":"23"},{"size":482,"mtime":1711055103613,"results":"25","hashOfConfig":"23"},{"size":1578,"mtime":1711105354976,"results":"26","hashOfConfig":"23"},{"size":946,"mtime":1711041125339,"results":"27","hashOfConfig":"23"},{"size":1376,"mtime":1710662409678,"results":"28","hashOfConfig":"23"},{"size":4589,"mtime":1711054250258,"results":"29","hashOfConfig":"23"},{"size":3981,"mtime":1710611996367,"results":"30","hashOfConfig":"23"},{"size":3400,"mtime":1710615371069,"results":"31","hashOfConfig":"23"},{"size":5582,"mtime":1711104993177,"results":"32","hashOfConfig":"23"},{"size":3272,"mtime":1710614584094,"results":"33","hashOfConfig":"23"},{"size":1003,"mtime":1710615342124,"results":"34","hashOfConfig":"23"},{"size":1170,"mtime":1711054342677,"results":"35","hashOfConfig":"23"},{"size":2155,"mtime":1711054404206,"results":"36","hashOfConfig":"23"},{"size":625,"mtime":1710611827500,"results":"37","hashOfConfig":"23"},{"size":4168,"mtime":1710621533532,"results":"38","hashOfConfig":"23"},{"size":911,"mtime":1711041003327,"results":"39","hashOfConfig":"23"},{"size":363,"mtime":1710614758492,"results":"40","hashOfConfig":"23"},{"size":2081,"mtime":1711053904586,"results":"41","hashOfConfig":"23"},{"size":1372,"mtime":1710685634257,"results":"42","hashOfConfig":"23"},{"size":1306,"mtime":1711105121978,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"137emyg",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tim/Projects/TransForm/client/src/main.ts",[],[],"/Users/tim/Projects/TransForm/client/src/App.vue",[],[],"/Users/tim/Projects/TransForm/client/src/router/index.ts",[],"/Users/tim/Projects/TransForm/client/src/views/HomeView.vue",[],"/Users/tim/Projects/TransForm/client/src/components/AddForm.vue",[],"/Users/tim/Projects/TransForm/client/src/components/Form.vue",["94","95","96"],"<template>\n    <div>\n        <div>\n            <h2>{{ props.name }}</h2>\n            <p>{{ props.description }}</p>\n        </div>\n        <slot name=\"fields\"></slot>\n    </div>\n    <PopupBackdrop :show=\"!!showAddForm\" :use-container=\"true\" :use-close-icon=\"true\" :use-padding=\"true\"\n        @on-close=\"() => showAddForm = false\">\n        <AddFormField @add:group=\"onAddGroup\" @add:input=\"onAddInput\" />\n    </PopupBackdrop>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue';\nimport { FormFieldGroup, InputField } from '@/models/form';\nimport PrimaryButton from './PrimaryButton.vue';\nimport PopupBackdrop from './PopupBackdrop.vue';\nimport AddFormGroup from './AddFormGroup.vue';\nimport AddFormInput from './AddFormInput.vue';\n\n\nconst emit = defineEmits<{\n    'submit:group': [form: FormFieldGroup]\n    'submit:input': [form: InputField]\n}>()\n\nconst showAddForm = ref<boolean>(false);\n\nconst props = defineProps<{\n    id: string;\n    name: string;\n    description: string;\n}>();\n\nconst onAddGroup = (form: FormFieldGroup) => {\n    emit('submit:group', form);\n    showAddForm.value = false;\n}\n\nconst onAddInput = (form: InputField) => {\n    emit('submit:input', form);\n    showAddForm.value = false;\n}\n\n</script>\n\n<style scoped lang=\"scss\">\n.buttons {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 1rem;\n    margin-top: 3rem;\n}\n</style>\n",[],"/Users/tim/Projects/TransForm/client/src/components/FormField.vue",[],"/Users/tim/Projects/TransForm/client/src/components/PopupBackdrop.vue",[],"/Users/tim/Projects/TransForm/client/src/components/PrimaryButton.vue",["97","98"],"<template>\n    <div class=\"container\" :style=\"{ display: props.span ? undefined : 'inline-block' }\">\n        <button ref=\"btnRef\" :disabled=\"props.disabled\" :type=\"props.type ?? 'button'\" @click=\"onClick\"\n            :class=\"{ 'loading': btnState === 'loading', 'success': btnState === 'success', 'secondary': variant === 'secondary' }\"\n            :style=\"{ width: props.span ? '100%' : undefined, minWidth: props.span ? undefined : '40px' }\">\n            <span v-if=\"btnState === 'default'\" class=\"content\">\n                <slot></slot>\n            </span>\n            <span v-if=\"btnState === 'success'\">\n                <font-awesome-icon icon=\"fa-solid fa-check\" />\n            </span>\n            <span v-if=\"btnState === 'loading'\" class=\"spinner\">\n                <LoadingSpinner fill=\"rgb(231, 231, 231)\" />\n            </span>\n        </button>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from 'vue';\nimport LoadingSpinner from './LoadingSpinner.vue';\n\nconst props = withDefaults(defineProps<{\n    type?: \"button\" | \"submit\" | \"reset\"\n    state?: 'loading' | 'success' | 'default'\n    disabled?: boolean\n    span?: boolean\n    variant?: 'primary' | 'secondary'\n}>(),\n    {\n        span: true,\n        variant: 'primary'\n    }\n)\n\nconst btnRef = ref<HTMLButtonElement>()\nconst btnState = ref<'loading' | 'success' | 'default'>(props.state === 'loading' ? 'loading' : 'default')\n\nwatch(() => props.state, (state) => {\n    btnState.value = state ?? 'default';\n    if (btnState.value === 'success') {\n        setTimeout(() => {\n            btnState.value = 'default'\n        }, 3000);\n    }\n})\n\nconst emit = defineEmits(['click'])\n\nconst onClick = (e: any) => {\n    emit('click')\n}\n\n\n</script>\n\n<style scoped lang=\"scss\">\n@import '../assets/variables.scss';\n\n.container {\n    .content {\n        margin: 0 1rem;\n    }\n}\n\nbutton {\n    outline: none;\n    height: 40px;\n    text-align: center;\n    width: 100%;\n    border-radius: 40px;\n    background: transparent;\n    border: 2px solid $btn-color;\n    color: $white;\n    letter-spacing: 1px;\n    text-shadow: 0;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    margin: 0 auto;\n\n    font: {\n        size: 12px;\n    }\n\n    cursor: pointer;\n    transition: all 0.25s ease;\n\n    &:hover {\n        color: white;\n        background: $btn-color;\n    }\n\n    &:active {\n        letter-spacing: 2px;\n    }\n\n    &:disabled {\n        color: white;\n        background: rgb(188 188 188 / 27%);\n        border: 2px solid rgb(188 188 188 / 27%);\n        cursor: initial;\n\n        &.loading {\n            width: 40px;\n            font-size: 0;\n            background: transparent;\n            border-color: $btn-color;\n\n            &:hover {\n                background: transparent;\n            }\n        }\n    }\n\n    &.secondary {\n        color: $white;\n        background-color: $btn-color;\n        border: 2px solid $btn-color;\n        font-weight: 600;\n\n        &:hover {\n            background-color: rgba($primary-color, .5);\n        }\n\n    }\n\n    .spinner {\n        height: 25px;\n        width: 25px;\n        display: grid;\n        align-items: center;\n    }\n\n    &.loading {\n        width: 40px;\n        font-size: 0;\n\n        &:hover {\n            background: transparent;\n        }\n    }\n\n    &.success {\n        font-size: 13px;\n        color: white;\n        background: $btn-color;\n    }\n\n}\n</style>","/Users/tim/Projects/TransForm/client/src/store/formStore.ts",["99"],"/Users/tim/Projects/TransForm/client/src/components/PrimaryInput.vue",["100","101"],"<template>\n    <div class=\"wrapper\">\n        <label :for=\"id\" class=\"inp\">\n            <input :class=\"{invalid: props.error}\" :type=\"props.type.toString()\" :id=\"props.id\" :placeholder=\"'&nbsp;'\"\n                :value=\"modelValue\" @input=\"onInput\" :invalid=\"props.error\" @change=\"onChange\">\n            <span class=\"label\">{{ props.label }}</span>\n            <span class=\"focus-bg\"></span>\n        </label>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\n\n\nconst emit = defineEmits(['update:modelValue', 'input', 'change'])\n\nconst onInput = (event: any) => {\n    emit('update:modelValue', event.target.value)\n    emit('input', event.target.value)\n}\n\nconst onChange = (event: any) => {\n    emit('update:modelValue', event.target.value)\n    emit('change', event.target.value)\n}\n\nconst props = defineProps<{\n    id: string;\n    label: string\n    type: string | number | boolean\n    error?: boolean\n    modelValue?: string\n}>()\n\n\n</script>\n\n<style scoped lang=\"scss\">\n@import '../assets/variables.scss';\n\n.wrapper {\n    -webkit-text-size-adjust: 100%;\n    -webkit-font-smoothing: antialiased;\n    overflow: hidden;\n}\n\n.inp {\n    position: relative;\n    margin: auto;\n    width: 100%;\n    max-width: 280px;\n    border-radius: 3px;\n    overflow: hidden;\n\n    .label {\n        position: absolute;\n        top: 0px;\n        left: 12px;\n        font-size: 16px;\n        color: rgba($white, 1);\n        font-weight: 500;\n        transform-origin: 0 -20px;\n        transform: translate3d(0, 0, 0);\n        transition: all .2s ease;\n        pointer-events: none;\n        white-space: nowrap;\n    }\n\n    .focus-bg {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: transparent;\n        z-index: -1;\n        transform: scaleX(0);\n        transform-origin: left;\n    }\n\n    input {\n        -webkit-appearance: none;\n        appearance: none;\n        width: 100%;\n        border: 0;\n        font-family: inherit;\n        padding: 16px 12px 0 12px;\n        height: 56px;\n        font-size: 16px;\n        font-weight: 600;\n        background: transparent;\n        box-shadow: inset 0 -2px 0 $input-color;\n        color: $white;\n        transition: all .15s ease;\n\n        &::placeholder{\n            color: rgba($white, .5);\n            font-weight: 400;\n        }\n\n        &:hover {\n            background: $input-hover-background ;\n            box-shadow: inset 0 -2px 0 $secondary-color;\n        }\n\n        &:not(:placeholder-shown) {\n            +.label {\n                color: rgba($white, 1);\n                transform: translate3d(0, -12px, 0) scale(.75);\n            }\n        }\n\n        &:focus {\n            background: rgba($white, .07);\n            box-shadow: inset 0 -2px 0 $secondary-color;\n            outline: none;\n\n            +.label {\n                transform: translate3d(0, -12px, 0) scale(.75);\n\n                +.focus-bg {\n                    transform: scaleX(1);\n                    transition: all .1s ease;\n                }\n            }\n        }\n\n        &.invalid{\n            box-shadow: inset 0 -2px 0 $error-color;\n        }\n    }\n}\n\ninput:-webkit-autofill {\n    +.label {\n        color: $input-color;\n        transform: translate3d(0, -12px, 0) scale(.75);\n    }\n}\n</style>","/Users/tim/Projects/TransForm/client/src/components/LoadingSpinner.vue",[],"/Users/tim/Projects/TransForm/client/src/components/AddFormGroup.vue",[],"/Users/tim/Projects/TransForm/client/src/components/AddFormInput.vue",[],"/Users/tim/Projects/TransForm/client/src/store/modalStore.ts",[],"/Users/tim/Projects/TransForm/client/src/components/SelectInput.vue",["102","103","104","105","106"],"<template>\n    <div class=\"select-wrapper\">\n        <label :for=\"id\" class=\"inp\">\n            <select :class=\"{ invalid: props.error }\" :id=\"props.id\"\n                :placeholder=\"props.placeholder ?? '&nbsp;'\" :value=\"currentValue\" @input=\"updateValue\"\n                :invalid=\"props.error\">\n                <option v-for=\"option in allOptions\" :key=\"option.value ?? 'default'\" :value=\"option.value\"\n                    :disabled=\"option.disabled\" :selected=\"option.default\">{{ option.label }}\n                </option>\n            </select>\n            <span class=\"label\">{{ props.label }}</span>\n            <span class=\"focus-bg\"></span>\n        </label>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { watch, computed, ref, type Ref, onMounted } from 'vue';\n\nconst emit = defineEmits(['update:modelValue', 'input'])\n\nconst props = defineProps<{\n    id: string;\n    error?: boolean\n    placeholder?: string\n    label: string\n    modelValue?: string\n    options: { value: string, label: string, default?: boolean, disabled?: boolean }[]\n    required?: boolean\n}>()\n\nconst hasDefault = computed(() => props.options.find(o => o.default))\n\nconst placeholder = computed(() => ({\n    value: '',\n    label: \"Välj \" + props.label.toLocaleLowerCase(),\n    default: !hasDefault.value,\n    disabled: props.required\n}))\n\nconst allOptions = computed(() => props.required ? props.options : [placeholder.value, ...props.options])\n\nconst currentValue = ref<string | undefined>(props.modelValue ?? props.options.find(o => o.default)?.value ?? placeholder.value.value)\n\nwatch(() => props.modelValue, (value) => {\n    currentValue.value = allOptions.value.find(o => o.value === value)!.value\n})\n\nconst updateValue = (event: any) => {\n    currentValue.value = allOptions.value.find(o => o.value === event.target.value)!.value\n    emit('update:modelValue', event.target.value ?? undefined)\n    emit('input', event.target.value ?? undefined)\n}\n\n</script>\n\n<style scoped lang=\"scss\">\n@import '../assets/variables.scss';\n\n.select-wrapper {\n    -webkit-text-size-adjust: 100%;\n    -webkit-font-smoothing: antialiased;\n}\n\n.inp {\n    position: relative;\n    margin: auto;\n    width: 100%;\n    max-width: 280px;\n    border-radius: 3px;\n    overflow: hidden;\n\n    .label {\n        position: absolute;\n        top: 0px;\n        left: 12px;\n        font-size: 16px;\n        color: rgba($white, .6);\n        font-weight: 500;\n        transform-origin: 0 -20px;\n        transform: translate3d(0, 0, 0);\n        transition: all .2s ease;\n        pointer-events: none;\n    }\n\n    .focus-bg {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: transparent;\n        z-index: -1;\n        transform: scaleX(0);\n        transform-origin: left;\n    }\n\n    select {\n        -webkit-appearance: none;\n        appearance: none;\n        width: 100%;\n        border: 0;\n        font-family: inherit;\n        padding: 16px 12px 0 12px;\n        height: 56px;\n        font-size: 16px;\n        font-weight: 600;\n        background: transparent;\n        box-shadow: inset 0 -2px 0 $input-color;\n        color: $white;\n        transition: all .15s ease;\n        cursor: pointer;\n\n        &:hover {\n            background: $input-hover-background;\n            box-shadow: inset 0 -2px 0 $secondary-color;\n        }\n\n        &:not(:placeholder-shown) {\n            +.label {\n                color: rgba($white, .5);\n                transform: translate3d(0, -12px, 0) scale(.75);\n            }\n        }\n\n        &:focus {\n            background: rgba($white, .07);\n            box-shadow: inset 0 -2px 0 $secondary-color;\n            outline: none;\n\n            +.label {\n                transform: translate3d(0, -12px, 0) scale(.75);\n\n                +.focus-bg {\n                    transform: scaleX(1);\n                    transition: all .1s ease;\n                }\n            }\n        }\n\n        &.invalid {\n            box-shadow: inset 0 -2px 0 $error-color;\n        }\n    }\n}\n\nselect:-webkit-autofill {\n    +.label {\n        color: $input-color;\n        transform: translate3d(0, -12px, 0) scale(.75);\n    }\n}\n</style>","/Users/tim/Projects/TransForm/client/src/models/form.ts",[],"/Users/tim/Projects/TransForm/client/src/utils/generalUtils.ts",[],"/Users/tim/Projects/TransForm/client/src/components/AddFormField.vue",["107"],"/Users/tim/Projects/TransForm/client/src/components/TabView.vue",["108","109"],"<template>\n    <div class=\"tabs-container\">\n        <div class=\"tabs\">\n            <div v-for=\"(tab, index) in tabs\" :key=\"index\" class=\"tab\" :class=\"{ active: modelValue === index }\"\n                @click=\"updateActiveTab(index)\">\n                <p>\n                    {{ tab }}\n                </p>\n            </div>\n        </div>\n        <div class=\"tab-content\">\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, defineProps, defineEmits } from 'vue';\n\n// Define props\nconst props = defineProps<{\n    tabs: string[],\n    modelValue: number\n}>();\n\n// Define emits\nconst emit = defineEmits<{\n    'update:modelValue': [index: number]\n}>();\n\n// Method to update active tab and emit the change\nconst updateActiveTab = (index: number) => {\n    emit('update:modelValue', index);\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '../assets/variables.scss';\n\n.tabs-container {\n    display: grid;\n    grid-template-rows: auto 1fr;\n    gap: 10px;\n}\n\n.tabs {\n    display: grid;\n    grid-auto-flow: column;\n    border-bottom: 2px solid $secondary-color;\n}\n\n.tab {\n    padding: 10px 20px;\n    cursor: pointer;\n    text-align: center;\n\n    p {\n        margin: 0;\n        padding: 0;\n    }\n}\n\n.tab.active {\n    background-color: $secondary-color;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n}\n\n</style>","/Users/tim/Projects/TransForm/client/src/views/FormView.vue",["110"],{"ruleId":"111","severity":1,"message":"112","line":18,"column":8,"nodeType":"113","messageId":"114","endLine":18,"endColumn":21},{"ruleId":"111","severity":1,"message":"115","line":20,"column":8,"nodeType":"113","messageId":"114","endLine":20,"endColumn":20},{"ruleId":"111","severity":1,"message":"116","line":21,"column":8,"nodeType":"113","messageId":"114","endLine":21,"endColumn":20},{"ruleId":"111","severity":1,"message":"117","line":50,"column":18,"nodeType":"113","messageId":"114","endLine":50,"endColumn":24},{"ruleId":"118","severity":1,"message":"119","line":50,"column":21,"nodeType":"120","messageId":"121","endLine":50,"endColumn":24,"suggestions":"122"},{"ruleId":"111","severity":1,"message":"123","line":3,"column":15,"nodeType":"113","messageId":"114","endLine":3,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":17,"column":25,"nodeType":"120","messageId":"121","endLine":17,"endColumn":28,"suggestions":"124"},{"ruleId":"118","severity":1,"message":"119","line":22,"column":26,"nodeType":"120","messageId":"121","endLine":22,"endColumn":29,"suggestions":"125"},{"ruleId":"111","severity":1,"message":"126","line":18,"column":37,"nodeType":"113","messageId":"114","endLine":18,"endColumn":40},{"ruleId":"111","severity":1,"message":"127","line":18,"column":42,"nodeType":"113","messageId":"114","endLine":18,"endColumn":51},{"ruleId":"128","severity":1,"message":"129","line":46,"column":26,"nodeType":"130","messageId":"131","endLine":46,"endColumn":72,"suggestions":"132"},{"ruleId":"118","severity":1,"message":"119","line":49,"column":29,"nodeType":"120","messageId":"121","endLine":49,"endColumn":32,"suggestions":"133"},{"ruleId":"128","severity":1,"message":"129","line":50,"column":26,"nodeType":"130","messageId":"131","endLine":50,"endColumn":85,"suggestions":"134"},{"ruleId":"111","severity":1,"message":"135","line":15,"column":25,"nodeType":"113","messageId":"114","endLine":15,"endColumn":30},{"ruleId":"111","severity":1,"message":"136","line":18,"column":10,"nodeType":"113","messageId":"114","endLine":18,"endColumn":13},{"ruleId":"111","severity":1,"message":"137","line":21,"column":7,"nodeType":"113","messageId":"114","endLine":21,"endColumn":12},{"ruleId":"111","severity":1,"message":"138","line":13,"column":10,"nodeType":"113","messageId":"114","endLine":13,"endColumn":18},"@typescript-eslint/no-unused-vars","'PrimaryButton' is defined but never used.","Identifier","unusedVar","'AddFormGroup' is defined but never used.","'AddFormInput' is defined but never used.","'e' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["139","140"],"'toRaw' is defined but never used.",["141","142"],["143","144"],"'Ref' is defined but never used.","'onMounted' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["145"],["146","147"],["148"],"'watch' is defined but never used.","'ref' is defined but never used.","'props' is assigned a value but never used.","'computed' is defined but never used.",{"messageId":"149","fix":"150","desc":"151"},{"messageId":"152","fix":"153","desc":"154"},{"messageId":"149","fix":"155","desc":"151"},{"messageId":"152","fix":"156","desc":"154"},{"messageId":"149","fix":"157","desc":"151"},{"messageId":"152","fix":"158","desc":"154"},{"messageId":"159","fix":"160","desc":"161"},{"messageId":"149","fix":"162","desc":"151"},{"messageId":"152","fix":"163","desc":"154"},{"messageId":"159","fix":"164","desc":"161"},"suggestUnknown",{"range":"165","text":"166"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"165","text":"167"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"168","text":"166"},{"range":"168","text":"167"},{"range":"169","text":"166"},{"range":"169","text":"167"},"suggestOptionalChain",{"range":"170","text":"171"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"172","text":"166"},{"range":"172","text":"167"},{"range":"173","text":"171"},[1685,1688],"unknown","never",[551,554],[677,680],[1682,1683],"?",[1722,1725],[1815,1816]]