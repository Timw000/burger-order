[{"/Users/tim/Projects/TransForm/client/src/main.ts":"1","/Users/tim/Projects/TransForm/client/src/App.vue":"2","/Users/tim/Projects/TransForm/client/src/router/index.ts":"3","/Users/tim/Projects/TransForm/client/src/views/HomeView.vue":"4","/Users/tim/Projects/TransForm/client/src/components/AddForm.vue":"5","/Users/tim/Projects/TransForm/client/src/components/Form.vue":"6","/Users/tim/Projects/TransForm/client/src/components/FormField.vue":"7","/Users/tim/Projects/TransForm/client/src/store/formStore.ts":"8","/Users/tim/Projects/TransForm/client/src/components/PrimaryInput.vue":"9","/Users/tim/Projects/TransForm/client/src/components/AddFormGroup.vue":"10","/Users/tim/Projects/TransForm/client/src/models/form.ts":"11","/Users/tim/Projects/TransForm/client/src/utils/generalUtils.ts":"12","/Users/tim/Projects/TransForm/client/src/components/PopupBackdrop.vue":"13","/Users/tim/Projects/TransForm/client/src/store/modalStore.ts":"14","/Users/tim/Projects/TransForm/client/src/components/PrimaryButton.vue":"15","/Users/tim/Projects/TransForm/client/src/components/LoadingSpinner.vue":"16","/Users/tim/Projects/TransForm/client/src/components/AddFormInput.vue":"17","/Users/tim/Projects/TransForm/client/src/components/SelectInput.vue":"18"},{"size":271,"mtime":1710614955376,"results":"19","hashOfConfig":"20"},{"size":123,"mtime":1710621995710,"results":"21","hashOfConfig":"20"},{"size":346,"mtime":1710605202409,"results":"22","hashOfConfig":"20"},{"size":2353,"mtime":1710627266915,"results":"23","hashOfConfig":"20"},{"size":943,"mtime":1710623016088,"results":"24","hashOfConfig":"20"},{"size":1738,"mtime":1710624299279,"results":"25","hashOfConfig":"20"},{"size":3711,"mtime":1710659798434,"results":"26","hashOfConfig":"20"},{"size":4696,"mtime":1710627194853,"results":"27","hashOfConfig":"20"},{"size":3272,"mtime":1710614584094,"results":"28","hashOfConfig":"20"},{"size":957,"mtime":1710623004005,"results":"29","hashOfConfig":"20"},{"size":1032,"mtime":1710627081027,"results":"30","hashOfConfig":"20"},{"size":363,"mtime":1710614758492,"results":"31","hashOfConfig":"20"},{"size":3981,"mtime":1710611996367,"results":"32","hashOfConfig":"20"},{"size":625,"mtime":1710611827500,"results":"33","hashOfConfig":"20"},{"size":3400,"mtime":1710615371069,"results":"34","hashOfConfig":"20"},{"size":1003,"mtime":1710615342124,"results":"35","hashOfConfig":"20"},{"size":1736,"mtime":1710627474780,"results":"36","hashOfConfig":"20"},{"size":4168,"mtime":1710621533532,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"137emyg",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},"/Users/tim/Projects/TransForm/client/src/main.ts",[],[],"/Users/tim/Projects/TransForm/client/src/App.vue",[],"/Users/tim/Projects/TransForm/client/src/router/index.ts",[],"/Users/tim/Projects/TransForm/client/src/views/HomeView.vue",[],"/Users/tim/Projects/TransForm/client/src/components/AddForm.vue",[],"/Users/tim/Projects/TransForm/client/src/components/Form.vue",[],"/Users/tim/Projects/TransForm/client/src/components/FormField.vue",[],"/Users/tim/Projects/TransForm/client/src/store/formStore.ts",[],"/Users/tim/Projects/TransForm/client/src/components/PrimaryInput.vue",["79","80"],"<template>\n    <div class=\"wrapper\">\n        <label :for=\"id\" class=\"inp\">\n            <input :class=\"{invalid: props.error}\" :type=\"props.type.toString()\" :id=\"props.id\" :placeholder=\"'&nbsp;'\"\n                :value=\"modelValue\" @input=\"onInput\" :invalid=\"props.error\" @change=\"onChange\">\n            <span class=\"label\">{{ props.label }}</span>\n            <span class=\"focus-bg\"></span>\n        </label>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\n\n\nconst emit = defineEmits(['update:modelValue', 'input', 'change'])\n\nconst onInput = (event: any) => {\n    emit('update:modelValue', event.target.value)\n    emit('input', event.target.value)\n}\n\nconst onChange = (event: any) => {\n    emit('update:modelValue', event.target.value)\n    emit('change', event.target.value)\n}\n\nconst props = defineProps<{\n    id: string;\n    label: string\n    type: string | number | boolean\n    error?: boolean\n    modelValue?: string\n}>()\n\n\n</script>\n\n<style scoped lang=\"scss\">\n@import '../assets/variables.scss';\n\n.wrapper {\n    -webkit-text-size-adjust: 100%;\n    -webkit-font-smoothing: antialiased;\n    overflow: hidden;\n}\n\n.inp {\n    position: relative;\n    margin: auto;\n    width: 100%;\n    max-width: 280px;\n    border-radius: 3px;\n    overflow: hidden;\n\n    .label {\n        position: absolute;\n        top: 0px;\n        left: 12px;\n        font-size: 16px;\n        color: rgba($white, 1);\n        font-weight: 500;\n        transform-origin: 0 -20px;\n        transform: translate3d(0, 0, 0);\n        transition: all .2s ease;\n        pointer-events: none;\n        white-space: nowrap;\n    }\n\n    .focus-bg {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: transparent;\n        z-index: -1;\n        transform: scaleX(0);\n        transform-origin: left;\n    }\n\n    input {\n        -webkit-appearance: none;\n        appearance: none;\n        width: 100%;\n        border: 0;\n        font-family: inherit;\n        padding: 16px 12px 0 12px;\n        height: 56px;\n        font-size: 16px;\n        font-weight: 600;\n        background: transparent;\n        box-shadow: inset 0 -2px 0 $input-color;\n        color: $white;\n        transition: all .15s ease;\n\n        &::placeholder{\n            color: rgba($white, .5);\n            font-weight: 400;\n        }\n\n        &:hover {\n            background: $input-hover-background ;\n            box-shadow: inset 0 -2px 0 $secondary-color;\n        }\n\n        &:not(:placeholder-shown) {\n            +.label {\n                color: rgba($white, 1);\n                transform: translate3d(0, -12px, 0) scale(.75);\n            }\n        }\n\n        &:focus {\n            background: rgba($white, .07);\n            box-shadow: inset 0 -2px 0 $secondary-color;\n            outline: none;\n\n            +.label {\n                transform: translate3d(0, -12px, 0) scale(.75);\n\n                +.focus-bg {\n                    transform: scaleX(1);\n                    transition: all .1s ease;\n                }\n            }\n        }\n\n        &.invalid{\n            box-shadow: inset 0 -2px 0 $error-color;\n        }\n    }\n}\n\ninput:-webkit-autofill {\n    +.label {\n        color: $input-color;\n        transform: translate3d(0, -12px, 0) scale(.75);\n    }\n}\n</style>",[],"/Users/tim/Projects/TransForm/client/src/components/AddFormGroup.vue",[],"/Users/tim/Projects/TransForm/client/src/models/form.ts",[],"/Users/tim/Projects/TransForm/client/src/utils/generalUtils.ts",[],"/Users/tim/Projects/TransForm/client/src/components/PopupBackdrop.vue",[],"/Users/tim/Projects/TransForm/client/src/store/modalStore.ts",[],"/Users/tim/Projects/TransForm/client/src/components/PrimaryButton.vue",["81","82"],"<template>\n    <div class=\"container\" :style=\"{ display: props.span ? undefined : 'inline-block' }\">\n        <button ref=\"btnRef\" :disabled=\"props.disabled\" :type=\"props.type ?? 'button'\" @click=\"onClick\"\n            :class=\"{ 'loading': btnState === 'loading', 'success': btnState === 'success', 'secondary': variant === 'secondary' }\"\n            :style=\"{ width: props.span ? '100%' : undefined, minWidth: props.span ? undefined : '40px' }\">\n            <span v-if=\"btnState === 'default'\" class=\"content\">\n                <slot></slot>\n            </span>\n            <span v-if=\"btnState === 'success'\">\n                <font-awesome-icon icon=\"fa-solid fa-check\" />\n            </span>\n            <span v-if=\"btnState === 'loading'\" class=\"spinner\">\n                <LoadingSpinner fill=\"rgb(231, 231, 231)\" />\n            </span>\n        </button>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from 'vue';\nimport LoadingSpinner from './LoadingSpinner.vue';\n\nconst props = withDefaults(defineProps<{\n    type?: \"button\" | \"submit\" | \"reset\"\n    state?: 'loading' | 'success' | 'default'\n    disabled?: boolean\n    span?: boolean\n    variant?: 'primary' | 'secondary'\n}>(),\n    {\n        span: true,\n        variant: 'primary'\n    }\n)\n\nconst btnRef = ref<HTMLButtonElement>()\nconst btnState = ref<'loading' | 'success' | 'default'>(props.state === 'loading' ? 'loading' : 'default')\n\nwatch(() => props.state, (state) => {\n    btnState.value = state ?? 'default';\n    if (btnState.value === 'success') {\n        setTimeout(() => {\n            btnState.value = 'default'\n        }, 3000);\n    }\n})\n\nconst emit = defineEmits(['click'])\n\nconst onClick = (e: any) => {\n    emit('click')\n}\n\n\n</script>\n\n<style scoped lang=\"scss\">\n@import '../assets/variables.scss';\n\n.container {\n    .content {\n        margin: 0 1rem;\n    }\n}\n\nbutton {\n    outline: none;\n    height: 40px;\n    text-align: center;\n    width: 100%;\n    border-radius: 40px;\n    background: transparent;\n    border: 2px solid $btn-color;\n    color: $white;\n    letter-spacing: 1px;\n    text-shadow: 0;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    margin: 0 auto;\n\n    font: {\n        size: 12px;\n    }\n\n    cursor: pointer;\n    transition: all 0.25s ease;\n\n    &:hover {\n        color: white;\n        background: $btn-color;\n    }\n\n    &:active {\n        letter-spacing: 2px;\n    }\n\n    &:disabled {\n        color: white;\n        background: rgb(188 188 188 / 27%);\n        border: 2px solid rgb(188 188 188 / 27%);\n        cursor: initial;\n\n        &.loading {\n            width: 40px;\n            font-size: 0;\n            background: transparent;\n            border-color: $btn-color;\n\n            &:hover {\n                background: transparent;\n            }\n        }\n    }\n\n    &.secondary {\n        color: $white;\n        background-color: $btn-color;\n        border: 2px solid $btn-color;\n        font-weight: 600;\n\n        &:hover {\n            background-color: rgba($primary-color, .5);\n        }\n\n    }\n\n    .spinner {\n        height: 25px;\n        width: 25px;\n        display: grid;\n        align-items: center;\n    }\n\n    &.loading {\n        width: 40px;\n        font-size: 0;\n\n        &:hover {\n            background: transparent;\n        }\n    }\n\n    &.success {\n        font-size: 13px;\n        color: white;\n        background: $btn-color;\n    }\n\n}\n</style>","/Users/tim/Projects/TransForm/client/src/components/LoadingSpinner.vue",[],"/Users/tim/Projects/TransForm/client/src/components/AddFormInput.vue",[],"/Users/tim/Projects/TransForm/client/src/components/SelectInput.vue",["83","84","85","86","87"],"<template>\n    <div class=\"select-wrapper\">\n        <label :for=\"id\" class=\"inp\">\n            <select :class=\"{ invalid: props.error }\" :id=\"props.id\"\n                :placeholder=\"props.placeholder ?? '&nbsp;'\" :value=\"currentValue\" @input=\"updateValue\"\n                :invalid=\"props.error\">\n                <option v-for=\"option in allOptions\" :key=\"option.value ?? 'default'\" :value=\"option.value\"\n                    :disabled=\"option.disabled\" :selected=\"option.default\">{{ option.label }}\n                </option>\n            </select>\n            <span class=\"label\">{{ props.label }}</span>\n            <span class=\"focus-bg\"></span>\n        </label>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { watch, computed, ref, type Ref, onMounted } from 'vue';\n\nconst emit = defineEmits(['update:modelValue', 'input'])\n\nconst props = defineProps<{\n    id: string;\n    error?: boolean\n    placeholder?: string\n    label: string\n    modelValue?: string\n    options: { value: string, label: string, default?: boolean, disabled?: boolean }[]\n    required?: boolean\n}>()\n\nconst hasDefault = computed(() => props.options.find(o => o.default))\n\nconst placeholder = computed(() => ({\n    value: '',\n    label: \"Välj \" + props.label.toLocaleLowerCase(),\n    default: !hasDefault.value,\n    disabled: props.required\n}))\n\nconst allOptions = computed(() => props.required ? props.options : [placeholder.value, ...props.options])\n\nconst currentValue = ref<string | undefined>(props.modelValue ?? props.options.find(o => o.default)?.value ?? placeholder.value.value)\n\nwatch(() => props.modelValue, (value) => {\n    currentValue.value = allOptions.value.find(o => o.value === value)!.value\n})\n\nconst updateValue = (event: any) => {\n    currentValue.value = allOptions.value.find(o => o.value === event.target.value)!.value\n    emit('update:modelValue', event.target.value ?? undefined)\n    emit('input', event.target.value ?? undefined)\n}\n\n</script>\n\n<style scoped lang=\"scss\">\n@import '../assets/variables.scss';\n\n.select-wrapper {\n    -webkit-text-size-adjust: 100%;\n    -webkit-font-smoothing: antialiased;\n}\n\n.inp {\n    position: relative;\n    margin: auto;\n    width: 100%;\n    max-width: 280px;\n    border-radius: 3px;\n    overflow: hidden;\n\n    .label {\n        position: absolute;\n        top: 0px;\n        left: 12px;\n        font-size: 16px;\n        color: rgba($white, .6);\n        font-weight: 500;\n        transform-origin: 0 -20px;\n        transform: translate3d(0, 0, 0);\n        transition: all .2s ease;\n        pointer-events: none;\n    }\n\n    .focus-bg {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: transparent;\n        z-index: -1;\n        transform: scaleX(0);\n        transform-origin: left;\n    }\n\n    select {\n        -webkit-appearance: none;\n        appearance: none;\n        width: 100%;\n        border: 0;\n        font-family: inherit;\n        padding: 16px 12px 0 12px;\n        height: 56px;\n        font-size: 16px;\n        font-weight: 600;\n        background: transparent;\n        box-shadow: inset 0 -2px 0 $input-color;\n        color: $white;\n        transition: all .15s ease;\n        cursor: pointer;\n\n        &:hover {\n            background: $input-hover-background;\n            box-shadow: inset 0 -2px 0 $secondary-color;\n        }\n\n        &:not(:placeholder-shown) {\n            +.label {\n                color: rgba($white, .5);\n                transform: translate3d(0, -12px, 0) scale(.75);\n            }\n        }\n\n        &:focus {\n            background: rgba($white, .07);\n            box-shadow: inset 0 -2px 0 $secondary-color;\n            outline: none;\n\n            +.label {\n                transform: translate3d(0, -12px, 0) scale(.75);\n\n                +.focus-bg {\n                    transform: scaleX(1);\n                    transition: all .1s ease;\n                }\n            }\n        }\n\n        &.invalid {\n            box-shadow: inset 0 -2px 0 $error-color;\n        }\n    }\n}\n\nselect:-webkit-autofill {\n    +.label {\n        color: $input-color;\n        transform: translate3d(0, -12px, 0) scale(.75);\n    }\n}\n</style>",{"ruleId":"88","severity":1,"message":"89","line":17,"column":25,"nodeType":"90","messageId":"91","endLine":17,"endColumn":28,"suggestions":"92"},{"ruleId":"88","severity":1,"message":"89","line":22,"column":26,"nodeType":"90","messageId":"91","endLine":22,"endColumn":29,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":50,"column":18,"nodeType":"96","messageId":"97","endLine":50,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":50,"column":21,"nodeType":"90","messageId":"91","endLine":50,"endColumn":24,"suggestions":"98"},{"ruleId":"94","severity":1,"message":"99","line":18,"column":37,"nodeType":"96","messageId":"97","endLine":18,"endColumn":40},{"ruleId":"94","severity":1,"message":"100","line":18,"column":42,"nodeType":"96","messageId":"97","endLine":18,"endColumn":51},{"ruleId":"101","severity":1,"message":"102","line":46,"column":26,"nodeType":"103","messageId":"104","endLine":46,"endColumn":72,"suggestions":"105"},{"ruleId":"88","severity":1,"message":"89","line":49,"column":29,"nodeType":"90","messageId":"91","endLine":49,"endColumn":32,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"102","line":50,"column":26,"nodeType":"103","messageId":"104","endLine":50,"endColumn":85,"suggestions":"107"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["108","109"],["110","111"],"@typescript-eslint/no-unused-vars","'e' is defined but never used.","Identifier","unusedVar",["112","113"],"'Ref' is defined but never used.","'onMounted' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["114"],["115","116"],["117"],{"messageId":"118","fix":"119","desc":"120"},{"messageId":"121","fix":"122","desc":"123"},{"messageId":"118","fix":"124","desc":"120"},{"messageId":"121","fix":"125","desc":"123"},{"messageId":"118","fix":"126","desc":"120"},{"messageId":"121","fix":"127","desc":"123"},{"messageId":"128","fix":"129","desc":"130"},{"messageId":"118","fix":"131","desc":"120"},{"messageId":"121","fix":"132","desc":"123"},{"messageId":"128","fix":"133","desc":"130"},"suggestUnknown",{"range":"134","text":"135"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"134","text":"136"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"137","text":"135"},{"range":"137","text":"136"},{"range":"138","text":"135"},{"range":"138","text":"136"},"suggestOptionalChain",{"range":"139","text":"140"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"141","text":"135"},{"range":"141","text":"136"},{"range":"142","text":"140"},[551,554],"unknown","never",[677,680],[1685,1688],[1682,1683],"?",[1722,1725],[1815,1816]]